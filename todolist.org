* general

** TODO use the todolist

* bugfixes/improvements


** TODO Rework pnet creation, introduce variants (cyclic pnet)? 
** STARTED Reaction rates : problem with floats
   Many problems, most immediate is reaction comparison
   -> Dirty fix : ignore rate to compare in RSet
** TODO explicit exceptions
** TODO gui:
    - [ ] update all molecules after transition (if needs be)
    - [ ] modify ambient 
    - [ ] clear button
    - [ ] examples load
    - [ ] error with refresh when pnet is removed
    - [X] commit env fails
    - [ ] refresh after loading
    - [ ] display reactions
** DONE stacktrace
** DONE Pnet creation : negative place_id in transitions
** DONE reactions not removed when removing molecule
** DONE break reaction 
   - seems ok with imol, but not with amol
** DONE repair missing execute actions
** DONE fix remove/change mol quantity from interface
** DONE display ambiant mols
** DONE sandbox pnet id
   - when requesting pnet_from_mol, pnet_id is sometimes missing
   - when deleting pnet, id is not provided
     -> en standby jusqu'à avoir une interface bien définie.
** DONE links to other pages in web interface
** DONE fix environment in gui
** DONE reporter service
   - [X] log folder
   - [ ] better logs
   - [X] use logs as a backend for reporter
   - [X] cli reporter works
** DONE revert amolset to a simpler state
   we will modify ARMgr to be a wrapper over 
   PnetSet.t Map, and same thing with IRMgr

   Pour rendre les choses propres, toute action 
   qui modifie un état interne renvoie la liste
   des actions à effectuer à plus haut niveau

** DONE petri net display inconsistencies
   the first time display works, but the next ones fail
   -> the problem was with cytoscape : empty_filter was not rcognised 
   and caused a bug

** DONE change « send to bact » to « send to sandbox » 
   in the molbuilder tab, and change behaviour accordingly

** DONE reactions initialisation seems broken :
   grabs happen between the same pnet (same id), and are added six times !
   -> problem solved, there was an error whan adding reactions to IRMap

* improvements
** TODO use Zarith module for reaction rates
** TODO use chalk for terminal colors
** TODO use Pnet Set as reactants
** TODO sanitize the use mutable/immutable and refs in structures
   - [ ] in amolset
   - [ ] everywhere ?

** STARTED implement tests
   describe bacteria where only one kind of reaction can happen to
   be able to predict results

** DONE sanitize server files :
   - use dune to copy files to the build directory
   - put external libs in an archive to clean git repo
** DONE split the web client in multiple pages

** DONE global reaction coefficient (in environment) : 
   The idea is to put these parameters in an environment module,
   that could be subject to dynamic changes. This would also allow 
   changes set by user input.
   There still lies the tradeoff between having reactions use this
   coefficient directly, or using it later in reac_mgr.
   A better abstraction in reac_mgr would allow to avoid too much boilerplate.

   - [X] feature
   - [X] interface to modify coefficients dynamically
     (is it possible ?)
   - [X] web interface

** DONE switch to a rest API for the webserver

** DONE mol quantity go under 0
   -> problem with references
* features

** TODO random binds
   - [ ] clean feature/random-binds branch
   - [ ] finalise feature

** TODO extended pnets (as graphs)


   
* optional

** TODO swith to ocsigen (or opium ?) for the web client/server (will never happen)

** TODO simple reactions to test against

* org mode cheat sheet

** checklist :
 - [X] switch with C-c C-c
 - [ ]  

** STATES

*** TODO 
*** STARTED 
*** CURRENT 
*** DONE 
*** CANCELED 



(setq org-todo-keywords
      '((sequence "TODO" "STARTED" "CURRENT"  "|" "DONE" "CANCELED")))


(setq org-todo-keyword-faces
      '(("TODO" . "yellow")
        ("STARTED" . "orange")
        ("CURRENT" .  (:foreground "red" :weight bold))
        ("DONE"    .  "lime green")
        ("CANCELED" .  "deep blue sky")))
